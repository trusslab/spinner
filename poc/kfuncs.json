{
	"hid_bpf_get_data": ["__u8 *", ["struct hid_bpf_ctx *ctx", "unsigned int offset","const size_t rdwr_buf_size"],["BPF_PROG_TYPE_TRACING"]],
        "hid_bpf_attach_prog": ["int", ["unsigned int hid_id", "int prog_fd", "__u32 flags"],["BPF_PROG_TYPE_SYSCALL"]],
        "hid_bpf_allocate_context": ["struct hid_bpf_ctx *", ["unsigned int hid_id"],["BPF_PROG_TYPE_SYSCALL"]],
        "hid_bpf_release_context": [ "void", ["struct hid_bpf_ctx *ctx"],["BPF_PROG_TYPE_SYSCALL"]],
        "hid_bpf_hw_request": ["int", ["struct hid_bpf_ctx *ctx", "__u8 *buf", "size_t buf__sz", "enum hid_report_type rtyp", "enum hid_class_request reqtype"],["BPF_PROG_TYPE_SYSCALL"]],
	"bpf_get_fsverity_digest": ["int",["struct file *file", "struct bpf_dynptr_kern *digest_ptr"],["BPF_PROG_TYPE_LSM"]],
	"bpf_arena_alloc_pages": ["void *", ["void *p__map", "void *addr__ign", "u32 page_cnt", "int node_id", "u64 flags"],["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_arena_free_pages": ["void", ["void *p__map", "void *ptr__ign", "u32 page_cnt"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_num_new": ["int", ["struct bpf_iter_num *it", "int start", "int end"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_num_next": ["int *", ["struct bpf_iter_num* it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_num_destroy": ["void", ["struct bpf_iter_num *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_new": ["int", ["struct bpf_iter_css *it", "struct cgroup_subsys_state *start", "unsigned int flags"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_next": ["struct cgroup_subsys_state *", ["struct bpf_iter_css *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_destroy": ["void", ["struct bpf_iter_css *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_cpumask_create": ["struct bpf_cpumask *", ["void"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_acquire": ["struct bpf_cpumask *", ["struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_release": ["void", ["struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_release_dtor": ["void", ["void *cpumask"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_first": ["u32", ["const struct cpumask *cpumask"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_first_zero": ["u32", ["const struct cpumask *cpumask"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_first_and": ["u32",["const struct cpumask *src1","const struct cpumask *src2"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_set_cpu": ["void", ["u32 cpu", "struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_clear_cpu": ["void", ["u32 cpu", "struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_test_cpu": ["bool", ["u32 cpu", "const struct cpumask *cpumask"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_test_and_set_cpu": ["bool", ["u32 cpu", "struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_test_and_clear_cpu": ["bool", ["u32 cpu", "struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_setall": ["void", ["struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_clear": ["void", ["struct bpf_cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_and": ["bool", ["struct bpf_cpumask *dst", "const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_or": ["void", ["struct bpf_cpumask *dst", "const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_xor": ["void", ["struct bpf_cpumask *dst", "const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_equal": ["bool", ["const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_intersects": ["bool", ["const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_subset": ["bool", ["const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_empty": ["bool", ["const struct cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_full": ["bool", ["const struct cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_copy": ["void", ["struct bpf_cpumask *dst", "const struct cpumask *src"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_any_distribute": ["u32", ["const struct cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_any_and_distribute": ["u32", ["const struct cpumask *src1", "const struct cpumask *src2"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_cpumask_weight": ["u32", ["const struct cpumask *cpumask"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_obj_new_impl": ["void *", ["u64 local_type_id__k", "void *meta__ign"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_percpu_obj_new_impl": [" void *", ["u64 local_type_id__k", "void *meta__ign"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_obj_drop_impl": ["void", ["void *p__alloc", "void *meta__ign"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_percpu_obj_drop_impl": ["void", ["void *p__alloc", "void *meta__ign"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_refcount_acquire_impl": ["void *", ["void *p__refcounted_kptr", "void *meta__ign"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_list_push_front_impl": ["int", ["struct bpf_list_head *head", "struct bpf_list_node *node", "void *meta__ign, u64 off"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_list_push_back_impl": ["int", ["struct bpf_list_head *head", "struct bpf_list_node *node", "void *meta__ign, u64 off"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_list_pop_front": ["struct bpf_list_node *", ["struct bpf_list_head *head"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_list_pop_back": ["struct bpf_list_node *", ["struct bpf_list_head *head"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_rbtree_remove": ["struct bpf_rb_node *", ["struct bpf_rb_root *root", "struct bpf_rb_node *node"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_rbtree_add_impl": ["int", ["struct bpf_rb_root *root", "struct bpf_rb_node *node", "bool (less)(struct bpf_rb_node *a, const struct bpf_rb_node *b)", "void *meta__ign", "u64 off"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_rbtree_first": ["struct bpf_rb_node *", ["struct bpf_rb_root *root"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_task_acquire": ["struct task_struct *", ["struct task_struct *p"],["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_task_release": ["void", ["struct task_struct *p"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_task_release_dtor": ["void", ["void *p"], []],
        "bpf_cgroup_acquire": ["struct cgroup *", ["struct cgroup *cgrp"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_cgroup_release": ["void", ["struct cgroup *cgrp"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_cgroup_release_dtor": ["void", ["void *cgrp"], []],
        "bpf_cgroup_ancestor": ["struct cgroup *", ["struct cgroup *cgrp", "int level"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_cgroup_from_id": ["struct cgroup *", ["u64 cgid"], []],
        "bpf_task_under_cgroup": ["long", ["struct task_struct *task", "struct cgroup *ancestor"], []],
        "bpf_task_get_cgroup1": ["struct cgroup *", ["struct task_struct *task", "int hierarchy_id"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_task_from_pid": ["struct task_struct *", ["s32 pid"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_dynptr_slice": ["void *",["const struct bpf_dynptr_kern *ptr", "u32 offset", "void *buffer__opt", "u32 buffer__szk"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_slice_rdwr": ["void *", ["const struct bpf_dynptr_kern *ptr", "u32 offset", "void *buffer__opt", "u32 buffer__szk"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_adjust": ["int", ["struct bpf_dynptr_kern *ptr", "u32 start", "u32 end"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_is_null": ["bool", ["struct bpf_dynptr_kern *ptr"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_is_rdonly": ["bool", ["struct bpf_dynptr_kern *ptr"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_size": ["__u32", ["struct bpf_dynptr_kern *ptr"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_dynptr_clone": ["int", ["struct bpf_dynptr_kern *ptr", "struct bpf_dynptr_kern *clone__uninit"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_cast_to_kern_ctx": ["void *", ["void *obj"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_rdonly_cast": ["void *", ["const void *obj__ign", "u32 btf_id__k"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_rcu_read_lock": ["void", ["void"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_rcu_read_unlock": ["void", ["void"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_throw": ["void", ["u64 cookie"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_map_sum_elem_count": ["s64", ["const struct bpf_map *map"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_task_vma_new": ["int", ["struct bpf_iter_task_vma *it", "struct task_struct *task", "u64 addr"], []],
        "bpf_iter_task_vma_next": ["struct vm_area_struct *", ["struct bpf_iter_task_vma *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_task_vma_destroy": ["void", ["struct bpf_iter_task_vma *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_task_new": ["int", ["struct bpf_iter_css_task *it", "struct cgroup_subsys_state *css", "unsigned int flags"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_task_next": ["struct task_struct *", ["struct bpf_iter_css_task *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_css_task_destroy": ["void", ["struct bpf_iter_css_task *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_task_new": ["int", ["struct bpf_iter_task *it", "struct task_struct *task__nullable", "unsigned int flags"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_task_next": ["struct task_struct *", ["struct bpf_iter_task *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "bpf_iter_task_destroy": ["void", ["struct bpf_iter_task *it"], ["BPF_PROG_TYPE_UNSPEC"]],
        "cgroup_rstat_updated": ["void", ["struct cgroup *cgrp", "int cpu"], ["BPF_PROG_TYPE_TRACING"]],
        "cgroup_rstat_flush": ["void", ["struct cgroup *cgrp"], ["BPF_PROG_TYPE_TRACING"]],
        "crash_kexec": ["void", ["struct pt_regs *regs"], ["BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_STRUCT_OPS", "BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_XDP"]],
        "bpf_fentry_test1": ["int", ["int a"], []],
        "bpf_fentry_test9": ["u32", ["u32 *a"], []],
        "bpf_modify_return_test": [["int a", "int *b"], []],
        "bpf_modify_return_test2": [["int a", "int *b", "short c", "int d", "void *e", "char f", "int g"], []],
        "bpf_kfunc_call_test_release": [["struct prog_test_ref_kfunc *p"], []],
        "bpf_kfunc_call_test_release_dtor": [["void *p"], []],
        "bpf_kfunc_call_memb_release": [["struct prog_test_member *p"], ["BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_SYSCALL"]],
        "bpf_kfunc_call_memb_release_dtor": [["void *p"], ["BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_TRACING", "BPF_PROG_TYPE_SYSCALL"]],
        "bpf_dynptr_from_skb": ["int", ["struct sk_buff *skb", "u64 flags", "struct bpf_dynptr_kern *ptr__uninit"], ["BPF_PROG_TYPE_SCHED_CLS", "BPF_PROG_TYPE_SCHED_ACT", "BPF_PROG_TYPE_SK_SKB", "BPF_PROG_TYPE_CGROUP_SKB", "BPF_PROG_TYPE_LWT_OUT", "BPF_PROG_TYPE_LWT_IN", "BPF_PROG_TYPE_LWT_XMIT", "BPF_PROG_TYPE_LWT_SEG6LOCAL", "BPF_PROG_TYPE_NETFILTER"]] ,
        "bpf_dynptr_from_xdp": ["int", ["struct xdp_buff *xdp", "u64 flags", "struct bpf_dynptr_kern *ptr__uninit"], ["BPF_PROG_TYPE_XDP"]],
        "bpf_sock_addr_set_sun_path": ["int", ["struct bpf_sock_addr_kern *sa_kern", "const u8 *sun_path", "u32 sun_path__sz"], ["BPF_PROG_TYPE_CGROUP_SOCK_ADDR"]],
        "bpf_sk_assign_tcp_reqsk": ["int", ["struct sk_buff *skb", "struct sock *sk", "struct bpf_tcp_req_attrs *attrs", "int attrs__sz"], ["BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_sock_destroy": ["int", ["struct sock_common *sock"], ["BPF_PROG_TYPE_TRACING"], ["BPF_TRACE_ITER"]],
        "bpf_xdp_metadata_rx_timestamp": ["int", ["const struct xdp_md *ctx", "u64 *timestamp"], ["BPF_PROG_TYPE_XDP"]],
        "bpf_xdp_metadata_rx_hash": ["int", ["const struct xdp_md *ctx, u32 *hash", "enum xdp_rss_hash_type *rss_type"], ["BPF_PROG_TYPE_XDP"]],
        "bpf_xdp_metadata_rx_vlan_tag": ["int", ["const struct xdp_md *ctx", "__be16 *vlan_proto", "u16 *vlan_tci"], ["BPF_PROG_TYPE_XDP"]],
        "bpf_skb_set_fou_encap": ["int", ["struct __sk_buff *skb_ctx", "struct bpf_fou_encap *encap", "int type"], ["BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_skb_get_fou_encap": ["int", ["struct __sk_buff *skb_ctx", "struct bpf_fou_encap *encap"], ["BPF_PROG_TYPE_SCHED_CLS"]],
        "bbr_min_tso_segs": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_cwnd_event": ["void", ["struct sock *sk", "enum tcp_ca_event event"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_main": ["void", ["struct sock *sk", "const struct rate_sample *rs"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_init": ["void", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_sndbuf_expand": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_undo_cwnd": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_ssthresh": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bbr_set_state": ["void", ["struct sock *sk", "u8 new_state"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "tcp_slow_start": ["u32", ["struct tcp_sock *tp", "u32 acked"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "tcp_cong_avoid_ai": ["void", ["struct tcp_sock *tp", "u32 w", "u32 acked"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "tcp_reno_cong_avoid": ["void", ["struct sock *sk", "u32 ack", "u32 acked"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "tcp_reno_ssthresh": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "tcp_reno_undo_cwnd": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_init": ["void", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_cwnd_event": ["void", ["struct sock *sk", "enum tcp_ca_event event"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_cong_avoid": ["void", ["struct sock *sk", "u32 ack", "u32 acked"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_recalc_ssthresh": ["u32",["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_state": ["void", ["struct sock *sk", "u8 new_state"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "cubictcp_asked": ["void", ["struct sock *sk", "const struct ack_sample *sample"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_init": ["void", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_ssthresh": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_update_alpha": ["void", ["struct sock *sk", "u32 flags"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_state": ["void", ["struct sock *sk", "u8 new_state"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_cwnd_event": ["void", ["struct sock *sk", "enum tcp_ca_event ev"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "dctcp_cwnd_undo": ["u32", ["struct sock *sk"], ["BPF_PROG_TYPE_STRUCT_OPS"]],
        "bpf_xdp_ct_alloc": ["struct nf_conn___init *", ["struct xdp_md *xdp_ctx", "struct bpf_sock_tuple *bpf_tuple", "u32 tuple__sz", "struct bpf_ct_opts *opts", "u32 opts__sz"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_xdp_ct_lookup": ["struct nf_conn *", ["struct xdp_md *xdp_ctx", "struct bpf_sock_tuple *bpf_tuple", "u32 tuple__sz", "struct bpf_ct_opts *opts", "u32 opts__sz"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_skb_ct_alloc": ["struct nf_conn___init *", ["struct __sk_buff *skb_ctx", "struct bpf_sock_tuple *bpf_tuple", "u32 tuple__sz", "struct bpf_ct_opts *opts", "u32 opts__sz"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_skb_ct_lookup": ["struct nf_conn *", ["struct __sk_buff *skb_ctx", "struct bpf_sock_tuple *bpf_tuple", "u32 tuple__sz", "struct bpf_ct_opts *opts", "u32 opts__sz"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_ct_insert_entry": ["struct nf_conn *", ["struct nf_conn___init *nfct_i"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_ct_release": ["void", ["struct nf_conn *nfct"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_ct_set_timeout": ["void", ["struct nf_conn___init *nfct", "u32 timeout"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
        "bpf_ct_change_timeout": ["int", ["struct nf_conn *nfct", "u32 timeout"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_ct_set_status": ["int", ["const struct nf_conn___init *nfct", "u32 status"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_ct_change_status": ["int", ["struct nf_conn *nfct", "u32 status"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_ct_set_nat_info": ["int", ["struct nf_conn___init *nfct", "union nf_inet_addr *addr", "int port", "enum nf_nat_manip_type manip"], ["BPF_PROG_TYPE_XDP", "BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_skb_get_xfrm_info": ["int", ["struct __sk_buff *skb_ctx", "struct bpf_xfrm_info *to"], ["BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_skb_set_xfrm_info": ["int", ["struct __sk_buff *skb_ctx", "const struct bpf_xfrm_info *from"], ["BPF_PROG_TYPE_SCHED_CLS"]],
	"bpf_xdp_get_xfrm_state": ["struct xfrm_state *", ["struct xdp_md *ctx", "struct bpf_xfrm_state_opts *opts", "u32 opts__sz"], ["BPF_PROG_TYPE_XDP"]],
	"bpf_xdp_xfrm_state_release": ["void", ["struct xfrm_state *x"], ["BPF_PROG_TYPE_XDP"]]
}

